Explication du code source
==========================

Cette section d√©crit en d√©tail les deux parties fondamentales du projet **Smart Waste Detection**,
qui repose sur l‚Äôutilisation de deux mod√®les **YOLOv8** combin√©s :

1. Le **mod√®le de d√©tection binaire** : d√©tecte si un objet est un d√©chet ou non.
2. Le **mod√®le de classification** : d√©termine le type de d√©chet parmi 5 classes.

------------------------------------------------------------
1. D√©tection : l'objet est-il un d√©chet ?
------------------------------------------------------------

Le premier mod√®le est entra√Æn√© pour **d√©tecter la pr√©sence d‚Äôun d√©chet dans une image**.
Il ne classe pas le type, mais indique si l‚Äôobjet est consid√©r√© comme un **d√©chet** ou **non**.

.. code-block:: python

   from ultralytics import YOLO

   # Chargement du mod√®le de d√©tection binaire (d√©chet / non-d√©chet)
   model_detect = YOLO("/content/drive/MyDrive/yolov8_best_smartdetection.pt")

   # Pr√©diction sur une image donn√©e
   results = model_detect("image.jpg")

   # Filtrage des objets d√©tect√©s comme "d√©chet" (classe 0)
   waste_boxes = [box for box in results[0].boxes if box.cls == 0]

**D√©tails importants :**

- Le mod√®le a √©t√© entra√Æn√© avec **YOLOv8** sur un dataset personnalis√© contenant deux classes : `waste` et `non_waste`.
- Il s‚Äôagit d‚Äôun mod√®le **l√©ger (YOLOv8n)**, optimis√© pour des pr√©dictions rapides.
- Le fichier du mod√®le est nomm√© : `yolov8_best_smartdetection.pt`.

**Objectif** : filtrer uniquement les objets pertinents avant de les transmettre au mod√®le de classification.

------------------------------------------------------------
2. Classification : quel type de d√©chet ?
------------------------------------------------------------

Le deuxi√®me mod√®le est sp√©cialis√© dans la **classification des objets d√©tect√©s comme d√©chets** √† l‚Äô√©tape pr√©c√©dente.

.. code-block:: python

   # Chargement du mod√®le de classification multi-classe
   model_classify = YOLO("/content/drive/MyDrive/yolov8_best.pt")

   # Pour chaque objet identifi√© comme d√©chet, effectuer la classification
   for box in waste_boxes:
       # Extraction (recadrage) de l‚Äôobjet √† partir de ses coordonn√©es
       cropped_img = crop_image("image.jpg", box.xyxy)

       # Classification de l‚Äôobjet recadr√©
       result = model_classify(cropped_img)

       # Affichage de la classe pr√©dite
       print(result[0].names[result[0].probs.top1])

**Classes g√©r√©es par le mod√®le :**

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - ID
     - Type de d√©chet
   * - 0
     - Plastique
   * - 1
     - Verre
   * - 2
     - M√©tal
   * - 3
     - Papier
   * - 4
     - Carton

------------------------------------------------------------
3. Int√©gration des deux mod√®les dans un pipeline
------------------------------------------------------------

Voici un aper√ßu du **pipeline complet**, combinant la d√©tection binaire et la classification :

.. code-block:: python

   from ultralytics import YOLO

   # Chargement des deux mod√®les
   model_detect = YOLO("/content/drive/MyDrive/yolov8_best_smartdetection.pt")
   model_classify = YOLO("/content/drive/MyDrive/yolov8_best.pt")

   # D√©tection initiale
   results = model_detect("image.jpg")

   for box in results[0].boxes:
       if box.cls == 0:  # Si la classe est "d√©chet"
           # Recadrage de l‚Äôobjet d√©tect√©
           cropped = crop_image("image.jpg", box.xyxy)

           # Classification de l‚Äôobjet recadr√©
           classification = model_classify(cropped)

           # Affichage du type de d√©chet pr√©dit
           print("Type de d√©chet :", classification[0].names[classification[0].probs.top1])

------------------------------------------------------------
4. Remarques techniques
------------------------------------------------------------

- La fonction `crop_image` (non fournie ici) doit permettre d‚Äôextraire la **r√©gion de l‚Äôimage correspondant √† l‚Äôobjet d√©tect√©**.
- Le mod√®le YOLOv8 accepte en entr√©e :
  - des **chemins de fichiers image**
  - ou des **tableaux NumPy** (images en m√©moire)
- Chaque mod√®le a √©t√© entra√Æn√© ind√©pendamment sur **Roboflow**, puis utilis√© avec la biblioth√®que **Ultralytics**.

------------------------------------------------------------
5. Conclusion
------------------------------------------------------------

L‚Äôutilisation combin√©e des deux mod√®les permet :

- ‚úÖ Une d√©tection plus fiable (r√©duction des faux positifs)
- ‚úÖ Une classification plus pr√©cise et cibl√©e
- ‚úÖ Une architecture flexible, compatible avec diff√©rents environnements :
  - Google Colab
  - Cam√©ras en temps r√©el
  - Interfaces Web (Streamlit)

------------------------------------------------------------
6. Support technique et environnement
------------------------------------------------------------

Pour ex√©cuter correctement ce code, voici les √©l√©ments n√©cessaires :

**Biblioth√®ques requises :**

- `ultralytics` ‚â• 8.x
- `opencv-python` (si `crop_image` utilise OpenCV)
- `numpy`
- `matplotlib` *(optionnel, pour visualisation)*

**Fichiers requis :**

- `/content/drive/MyDrive/yolov8_best_smartdetection.pt` : mod√®le de d√©tection binaire
- `/content/drive/MyDrive/yolov8_best.pt` : mod√®le de classification
- `image.jpg` : image d‚Äôentr√©e √† analyser
- `crop_image()` : fonction utilitaire √† d√©finir pour extraire un objet √† partir de coordonn√©es `xyxy`

**Environnement recommand√© :**

- Google Colab (GPU)
- Python ‚â• 3.8
- Sauvegarde des mod√®les sur Google Drive pour une int√©gration facile

**Bonnes pratiques :**

- Tester les deux mod√®les s√©par√©ment avant l‚Äôint√©gration
- V√©rifier le format d‚Äôimage et les dimensions attendues par YOLO
- Ajouter des messages d‚Äôerreur si `waste_boxes` est vide (aucun d√©chet d√©tect√©)

------------------------------------------------------------
üìû Contact & Support
----------------------

.. raw:: html

   <div style="background-color: #28a745; padding: 20px; border-radius: 10px; margin: 20px 0; box-shadow: 0 4px 8px rgba(0,0,0,0.1); text-align: center;">
      <div style="color: white; font-family: 'Arial', sans-serif;">
         <h3 style="margin: 0 0 15px 0; font-size: 1.4em; font-weight: bold;">
            üå± D√©velopp√© par l'√©quipe Smart Waste Detection
         </h3>
         <p style="margin: 10px 0; font-size: 1.1em; opacity: 0.9;">
            Youssef ES-SAAIDI ‚Ä¢ Zakariae ZEMMAHI ‚Ä¢ Mohamed HAJJI
         </p>
         <div style="display: flex; justify-content: center; gap: 30px; flex-wrap: wrap; margin-top: 15px;">
            <div style="display: flex; align-items: center; gap: 8px;">
               <span style="font-size: 1.2em;">üêô</span>
               <a href="https://github.com/YoussefAIDT" target="_blank" style="color: #ffffff; text-decoration: none; font-weight: 500; padding: 5px 10px; background-color: rgba(255,255,255,0.2); border-radius: 5px; transition: all 0.3s ease;">
                  YoussefAIDT GitHub
               </a>
            </div>
            <div style="display: flex; align-items: center; gap: 8px;">
               <span style="font-size: 1.2em;">üêô</span>
               <a href="https://github.com/zakariazemmahi" target="_blank" style="color: #ffffff; text-decoration: none; font-weight: 500; padding: 5px 10px; background-color: rgba(255,255,255,0.2); border-radius: 5px; transition: all 0.3s ease;">
                  zakariazemmahi GitHub
               </a>
            </div>
            <div style="display: flex; align-items: center; gap: 8px;">
               <span style="font-size: 1.2em;">üêô</span>
               <a href="https://github.com/mohamedhajji11" target="_blank" style="color: #ffffff; text-decoration: none; font-weight: 500; padding: 5px 10px; background-color: rgba(255,255,255,0.2); border-radius: 5px; transition: all 0.3s ease;">
                  mohamedhajji11 GitHub
               </a>
            </div>
         </div>
         <div style="margin-top: 20px; padding-top: 15px; border-top: 1px solid rgba(255,255,255,0.3);">
            <p style="margin: 5px 0; font-size: 0.9em; opacity: 0.8;">
               üìß Pour toute question technique ou collaboration
            </p>
            <p style="margin: 5px 0; font-size: 0.9em; opacity: 0.8;">
               üöÄ Contribuez au projet ‚Ä¢ üåç Ensemble pour un avenir plus propre
            </p>
         </div>
      </div>
   </div>

.. raw:: html

   <style>
   div a:hover {
      background-color: rgba(255,255,255,0.3) !important;
      transform: translateY(-2px);
   }
   </style>
